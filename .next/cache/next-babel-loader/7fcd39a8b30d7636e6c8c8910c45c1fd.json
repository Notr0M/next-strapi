{"ast":null,"code":"var _jsxFileName = \"F:\\\\mywork\\\\next-projects\\\\shoping\\\\frontend\\\\pages\\\\restaurants\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { useRouter } from \"next/router\";\nexport var __N_SSG = true;\nexport default function DynamicPage(props) {\n  var router = useRouter();\n\n  if (router.isFallback) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  }, \"test\");\n}","map":{"version":3,"sources":["F:/mywork/next-projects/shoping/frontend/pages/restaurants/[id].js"],"names":["React","Layout","useRouter","DynamicPage","props","router","isFallback"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;;AAEA,MAAIG,MAAM,CAACC,UAAX,EAAuB;AACrB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport fetch from \"node-fetch\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport default function DynamicPage(props) {\r\n  const router = useRouter();\r\n\r\n  if (router.isFallback) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return <div>test</div>;\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  console.log(\"get path\");\r\n  const res = await fetch(\"http://localhost:3030/restaurants\");\r\n  const restaurants = await res.json();\r\n\r\n  const paths = restaurants.map(\r\n    (restaurant) => `/restaurants/${restaurant._id}`\r\n  );\r\n\r\n  // We'll pre-render only these paths at build time.\r\n  // { fallback: false } means other routes should 404.\r\n  return { paths, fallback: true };\r\n}\r\n\r\nexport async function getStaticProps(arg) {\r\n  console.log(\"get static\");\r\n  //console.log(arg);\r\n  const res = await fetch(`http://localhost:3030/restaurants/${arg.params.id}`);\r\n  const restaurant = await res.json();\r\n\r\n  // Pass post data to the page via props\r\n  return { props: { restaurant } };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}