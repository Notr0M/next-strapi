{"ast":null,"code":"var _jsxFileName = \"F:\\\\mywork\\\\next-projects\\\\shoping\\\\frontend\\\\components\\\\RestaurantList\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { graphql } from \"@apollo/react-hooks\";\nimport { Button, Card, CardBody, CardColumns, CardImg, CardSubtitle } from \"reactstrap\";\nimport { CardText, CardTitle, Col, Row } from \"reactstrap\";\n\nconst RestaurantList = ({\n  data: {\n    loading,\n    error,\n    restaurants\n  },\n  search\n}, req) => {\n  if (error) return \"Error loading restaurants\"; //if restaurants are returned from the GraphQL query, run the filter query\n  //and set equal to variable restaurantSearch\n\n  if (restaurants && restaurants.length) {\n    //searchQuery\n    const searchQuery = restaurants.filter(query => query.name.toLowerCase().includes(search));\n\n    if (searchQuery.length != 0) {\n      return __jsx(\"div\", {\n        className: \"jsx-1272619790\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-1272619790\" + \" \" + \"h-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, searchQuery.map(res => __jsx(Card, {\n        style: {\n          width: \"30%\",\n          margin: \"0 10px\"\n        },\n        className: \"h-100\",\n        key: res._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 250\n        },\n        src: `http://localhost:1337${res.image.url}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }), __jsx(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, __jsx(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }, res.name), __jsx(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"jsx-1272619790\" + \" \" + \"card-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, __jsx(Link, {\n        as: `/restaurants/${res._id}`,\n        href: `/restaurants?id=${res._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }\n      }, __jsx(\"a\", {\n        className: \"jsx-1272619790\" + \" \" + \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, \"View\")))))), __jsx(_JSXStyle, {\n        id: \"1272619790\",\n        __self: this\n      }, \"a{color:white;}a:link{-webkit-text-decoration:none;text-decoration:none;color:white;}a:hover{color:white;}.card-columns{-webkit-column-count:3;column-count:3;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkY6XFxteXdvcmtcXG5leHQtcHJvamVjdHNcXHNob3BpbmdcXGZyb250ZW5kXFxjb21wb25lbnRzXFxSZXN0YXVyYW50TGlzdFxcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMERhLEFBRzZCLEFBR1MsQUFJVCxBQUdHLFlBVGpCLEFBT0EsMEJBR0EsWUFQYyxZQUNkIiwiZmlsZSI6IkY6XFxteXdvcmtcXG5leHQtcHJvamVjdHNcXHNob3BpbmdcXGZyb250ZW5kXFxjb21wb25lbnRzXFxSZXN0YXVyYW50TGlzdFxcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3FsIGZyb20gXCJncmFwaHFsLXRhZ1wiO1xyXG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XHJcbmltcG9ydCB7IGdyYXBocWwgfSBmcm9tIFwiQGFwb2xsby9yZWFjdC1ob29rc1wiO1xyXG5pbXBvcnQge1xyXG4gIEJ1dHRvbixcclxuICBDYXJkLFxyXG4gIENhcmRCb2R5LFxyXG4gIENhcmRDb2x1bW5zLFxyXG4gIENhcmRJbWcsXHJcbiAgQ2FyZFN1YnRpdGxlLFxyXG59IGZyb20gXCJyZWFjdHN0cmFwXCI7XHJcbmltcG9ydCB7IENhcmRUZXh0LCBDYXJkVGl0bGUsIENvbCwgUm93IH0gZnJvbSBcInJlYWN0c3RyYXBcIjtcclxuXHJcbmNvbnN0IFJlc3RhdXJhbnRMaXN0ID0gKFxyXG4gIHsgZGF0YTogeyBsb2FkaW5nLCBlcnJvciwgcmVzdGF1cmFudHMgfSwgc2VhcmNoIH0sXHJcbiAgcmVxXHJcbikgPT4ge1xyXG4gIGlmIChlcnJvcikgcmV0dXJuIFwiRXJyb3IgbG9hZGluZyByZXN0YXVyYW50c1wiO1xyXG4gIC8vaWYgcmVzdGF1cmFudHMgYXJlIHJldHVybmVkIGZyb20gdGhlIEdyYXBoUUwgcXVlcnksIHJ1biB0aGUgZmlsdGVyIHF1ZXJ5XHJcbiAgLy9hbmQgc2V0IGVxdWFsIHRvIHZhcmlhYmxlIHJlc3RhdXJhbnRTZWFyY2hcclxuXHJcbiAgaWYgKHJlc3RhdXJhbnRzICYmIHJlc3RhdXJhbnRzLmxlbmd0aCkge1xyXG4gICAgLy9zZWFyY2hRdWVyeVxyXG4gICAgY29uc3Qgc2VhcmNoUXVlcnkgPSByZXN0YXVyYW50cy5maWx0ZXIoKHF1ZXJ5KSA9PlxyXG4gICAgICBxdWVyeS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoKVxyXG4gICAgKTtcclxuICAgIGlmIChzZWFyY2hRdWVyeS5sZW5ndGggIT0gMCkge1xyXG4gICAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImgtMTAwXCI+XHJcbiAgICAgICAgICAgIHtzZWFyY2hRdWVyeS5tYXAoKHJlcykgPT4gKFxyXG4gICAgICAgICAgICAgIDxDYXJkXHJcbiAgICAgICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogXCIzMCVcIiwgbWFyZ2luOiBcIjAgMTBweFwiIH19XHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJoLTEwMFwiXHJcbiAgICAgICAgICAgICAgICBrZXk9e3Jlcy5faWR9XHJcbiAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgPENhcmRJbWdcclxuICAgICAgICAgICAgICAgICAgdG9wPXt0cnVlfVxyXG4gICAgICAgICAgICAgICAgICBzdHlsZT17eyBoZWlnaHQ6IDI1MCB9fVxyXG4gICAgICAgICAgICAgICAgICBzcmM9e2BodHRwOi8vbG9jYWxob3N0OjEzMzcke3Jlcy5pbWFnZS51cmx9YH1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICA8Q2FyZEJvZHk+XHJcbiAgICAgICAgICAgICAgICAgIDxDYXJkVGl0bGU+e3Jlcy5uYW1lfTwvQ2FyZFRpdGxlPlxyXG4gICAgICAgICAgICAgICAgICA8Q2FyZFRleHQ+e3Jlcy5kZXNjcmlwdGlvbn08L0NhcmRUZXh0PlxyXG4gICAgICAgICAgICAgICAgPC9DYXJkQm9keT5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1mb290ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgPExpbmtcclxuICAgICAgICAgICAgICAgICAgICBhcz17YC9yZXN0YXVyYW50cy8ke3Jlcy5faWR9YH1cclxuICAgICAgICAgICAgICAgICAgICBocmVmPXtgL3Jlc3RhdXJhbnRzP2lkPSR7cmVzLl9pZH1gfVxyXG4gICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5XCI+VmlldzwvYT5cclxuICAgICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9DYXJkPlxyXG4gICAgICAgICAgICApKX1cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPlxyXG4gICAgICAgICAgICB7YFxyXG4gICAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBhOmxpbmsge1xyXG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBhOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLmNhcmQtY29sdW1ucyB7XHJcbiAgICAgICAgICAgICAgICBjb2x1bW4tY291bnQ6IDM7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBgfVxyXG4gICAgICAgICAgPC9zdHlsZT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiA8aDE+Tm8gUmVzdGF1cmFudHMgRm91bmQ8L2gxPjtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIDxoMT5Mb2FkaW5nPC9oMT47XHJcbn07XHJcblxyXG5jb25zdCBxdWVyeSA9IGdxbGBcclxuICB7XHJcbiAgICByZXN0YXVyYW50cyB7XHJcbiAgICAgIF9pZFxyXG4gICAgICBuYW1lXHJcbiAgICAgIGRlc2NyaXB0aW9uXHJcbiAgICAgIGltYWdlIHtcclxuICAgICAgICB1cmxcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuUmVzdGF1cmFudExpc3QuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKHsgcmVxIH0pID0+IHtcclxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3MvemVpdC9uZXh0LmpzXCIpO1xyXG4gIGNvbnN0IGpzb24gPSBhd2FpdCByZXMuanNvbigpO1xyXG4gIHJldHVybiB7IHN0YXJzOiBqc29uLnN0YXJnYXplcnNfY291bnQgfTtcclxufTtcclxuLy8gVGhlIGBncmFwaHFsYCB3cmFwcGVyIGV4ZWN1dGVzIGEgR3JhcGhRTCBxdWVyeSBhbmQgbWFrZXMgdGhlIHJlc3VsdHNcclxuLy8gYXZhaWxhYmxlIG9uIHRoZSBgZGF0YWAgcHJvcCBvZiB0aGUgd3JhcHBlZCBjb21wb25lbnQgKFJlc3RhdXJhbnRMaXN0KVxyXG5leHBvcnQgZGVmYXVsdCBncmFwaHFsKHF1ZXJ5LCB7XHJcbiAgcHJvcHM6ICh7IGRhdGEgfSkgPT4gKHtcclxuICAgIGRhdGEsXHJcbiAgfSksXHJcbn0pKFJlc3RhdXJhbnRMaXN0KTtcclxuIl19 */\\n/*@ sourceURL=F:\\\\\\\\mywork\\\\\\\\next-projects\\\\\\\\shoping\\\\\\\\frontend\\\\\\\\components\\\\\\\\RestaurantList\\\\\\\\index.js */\"));\n    } else {\n      return __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }\n      }, \"No Restaurants Found\");\n    }\n  }\n\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 10\n    }\n  }, \"Loading\");\n};\n\nconst query = gql`\n  {\n    restaurants {\n      _id\n      name\n      description\n      image {\n        url\n      }\n    }\n  }\n`;\n\nRestaurantList.getInitialProps = async ({\n  req\n}) => {\n  const res = await fetch(\"https://api.github.com/repos/zeit/next.js\");\n  const json = await res.json();\n  return {\n    stars: json.stargazers_count\n  };\n}; // The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (RestaurantList)\n\n\nexport default graphql(query, {\n  props: ({\n    data\n  }) => ({\n    data\n  })\n})(RestaurantList);","map":{"version":3,"sources":["F:/mywork/next-projects/shoping/frontend/components/RestaurantList/index.js"],"names":["gql","Link","graphql","Button","Card","CardBody","CardColumns","CardImg","CardSubtitle","CardText","CardTitle","Col","Row","RestaurantList","data","loading","error","restaurants","search","req","length","searchQuery","filter","query","name","toLowerCase","includes","map","res","width","margin","_id","height","image","url","description","getInitialProps","fetch","json","stars","stargazers_count","props"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,OALF,EAMEC,YANF,QAOO,YAPP;AAQA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,GAA9B,EAAmCC,GAAnC,QAA8C,YAA9C;;AAEA,MAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAR;AAAyCC,EAAAA;AAAzC,CADqB,EAErBC,GAFqB,KAGlB;AACH,MAAIH,KAAJ,EAAW,OAAO,2BAAP,CADR,CAEH;AACA;;AAEA,MAAIC,WAAW,IAAIA,WAAW,CAACG,MAA/B,EAAuC;AACrC;AACA,UAAMC,WAAW,GAAGJ,WAAW,CAACK,MAAZ,CAAoBC,KAAD,IACrCA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCR,MAAlC,CADkB,CAApB;;AAGA,QAAIG,WAAW,CAACD,MAAZ,IAAsB,CAA1B,EAA6B;AAC3B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA,4CAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,WAAW,CAACM,GAAZ,CAAiBC,GAAD,IACf,MAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SADT;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,GAAG,EAAEF,GAAG,CAACG,GAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,MAAC,OAAD;AACE,QAAA,GAAG,EAAE,IADP;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAFT;AAGE,QAAA,GAAG,EAAG,wBAAuBJ,GAAG,CAACK,KAAJ,CAAUC,GAAI,EAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAUE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYN,GAAG,CAACJ,IAAhB,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWI,GAAG,CAACO,WAAf,CAFF,CAVF,EAcE;AAAA,4CAAe,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AACE,QAAA,EAAE,EAAG,gBAAeP,GAAG,CAACG,GAAI,EAD9B;AAEE,QAAA,IAAI,EAAG,mBAAkBH,GAAG,CAACG,GAAI,EAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAA,4CAAa,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,CAdF,CADD,CADH,CADF;AAAA;AAAA;AAAA,41JADF;AAiDD,KAlDD,MAkDO;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD;AACF;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,CApED;;AAsEA,MAAMR,KAAK,GAAGvB,GAAI;;;;;;;;;;;CAAlB;;AAYAa,cAAc,CAACuB,eAAf,GAAiC,OAAO;AAAEjB,EAAAA;AAAF,CAAP,KAAmB;AAClD,QAAMS,GAAG,GAAG,MAAMS,KAAK,CAAC,2CAAD,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMV,GAAG,CAACU,IAAJ,EAAnB;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAED,IAAI,CAACE;AAAd,GAAP;AACD,CAJD,C,CAKA;AACA;;;AACA,eAAetC,OAAO,CAACqB,KAAD,EAAQ;AAC5BkB,EAAAA,KAAK,EAAE,CAAC;AAAE3B,IAAAA;AAAF,GAAD,MAAe;AACpBA,IAAAA;AADoB,GAAf;AADqB,CAAR,CAAP,CAIZD,cAJY,CAAf","sourcesContent":["import gql from \"graphql-tag\";\r\nimport Link from \"next/link\";\r\nimport { graphql } from \"@apollo/react-hooks\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardColumns,\r\n  CardImg,\r\n  CardSubtitle,\r\n} from \"reactstrap\";\r\nimport { CardText, CardTitle, Col, Row } from \"reactstrap\";\r\n\r\nconst RestaurantList = (\r\n  { data: { loading, error, restaurants }, search },\r\n  req\r\n) => {\r\n  if (error) return \"Error loading restaurants\";\r\n  //if restaurants are returned from the GraphQL query, run the filter query\r\n  //and set equal to variable restaurantSearch\r\n\r\n  if (restaurants && restaurants.length) {\r\n    //searchQuery\r\n    const searchQuery = restaurants.filter((query) =>\r\n      query.name.toLowerCase().includes(search)\r\n    );\r\n    if (searchQuery.length != 0) {\r\n      return (\r\n        <div>\r\n          <div className=\"h-100\">\r\n            {searchQuery.map((res) => (\r\n              <Card\r\n                style={{ width: \"30%\", margin: \"0 10px\" }}\r\n                className=\"h-100\"\r\n                key={res._id}\r\n              >\r\n                <CardImg\r\n                  top={true}\r\n                  style={{ height: 250 }}\r\n                  src={`http://localhost:1337${res.image.url}`}\r\n                />\r\n                <CardBody>\r\n                  <CardTitle>{res.name}</CardTitle>\r\n                  <CardText>{res.description}</CardText>\r\n                </CardBody>\r\n                <div className=\"card-footer\">\r\n                  <Link\r\n                    as={`/restaurants/${res._id}`}\r\n                    href={`/restaurants?id=${res._id}`}\r\n                  >\r\n                    <a className=\"btn btn-primary\">View</a>\r\n                  </Link>\r\n                </div>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          <style jsx global>\r\n            {`\r\n              a {\r\n                color: white;\r\n              }\r\n              a:link {\r\n                text-decoration: none;\r\n                color: white;\r\n              }\r\n              a:hover {\r\n                color: white;\r\n              }\r\n              .card-columns {\r\n                column-count: 3;\r\n              }\r\n            `}\r\n          </style>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <h1>No Restaurants Found</h1>;\r\n    }\r\n  }\r\n  return <h1>Loading</h1>;\r\n};\r\n\r\nconst query = gql`\r\n  {\r\n    restaurants {\r\n      _id\r\n      name\r\n      description\r\n      image {\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\nRestaurantList.getInitialProps = async ({ req }) => {\r\n  const res = await fetch(\"https://api.github.com/repos/zeit/next.js\");\r\n  const json = await res.json();\r\n  return { stars: json.stargazers_count };\r\n};\r\n// The `graphql` wrapper executes a GraphQL query and makes the results\r\n// available on the `data` prop of the wrapped component (RestaurantList)\r\nexport default graphql(query, {\r\n  props: ({ data }) => ({\r\n    data,\r\n  }),\r\n})(RestaurantList);\r\n"]},"metadata":{},"sourceType":"module"}