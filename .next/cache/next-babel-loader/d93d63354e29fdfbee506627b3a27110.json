{"ast":null,"code":"var _jsxFileName = \"F:\\\\mywork\\\\next-projects\\\\shoping\\\\frontend\\\\components\\\\RestaurantList\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { graphql } from \"react-apollo\";\nimport { Button, Card, CardBody, CardColumns, CardImg, CardSubtitle } from \"reactstrap\";\nimport { CardText, CardTitle, Col, Row } from \"reactstrap\";\n\nconst RestaurantList = ({\n  restaurants,\n  search\n}) => {\n  //if (error) return \"Error loading restaurants\";\n  //if restaurants are returned from the GraphQL query, run the filter query\n  //and set equal to variable restaurantSearch\n  if (restaurants && restaurants.length) {\n    //searchQuery\n    const searchQuery = restaurants.filter(query => query.name.toLowerCase().includes(search));\n\n    if (searchQuery.length != 0) {\n      return __jsx(\"div\", {\n        className: \"jsx-1272619790\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-1272619790\" + \" \" + \"h-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, searchQuery.map(res => __jsx(Card, {\n        style: {\n          width: \"30%\",\n          margin: \"0 10px\"\n        },\n        className: \"h-100\",\n        key: res._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 250\n        },\n        src: `http://localhost:1337${res.image[0].url}`,\n        alt: `${res.name}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }), __jsx(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, __jsx(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }\n      }, res.name), __jsx(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"jsx-1272619790\" + \" \" + \"card-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, __jsx(Link, {\n        as: `/restaurants/${res._id}`,\n        href: `/restaurants?id=${res._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, __jsx(\"a\", {\n        className: \"jsx-1272619790\" + \" \" + \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, \"View\")))))), __jsx(_JSXStyle, {\n        id: \"1272619790\",\n        __self: this\n      }, \"a{color:white;}a:link{-webkit-text-decoration:none;text-decoration:none;color:white;}a:hover{color:white;}.card-columns{-webkit-column-count:3;column-count:3;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkY6XFxteXdvcmtcXG5leHQtcHJvamVjdHNcXHNob3BpbmdcXGZyb250ZW5kXFxjb21wb25lbnRzXFxSZXN0YXVyYW50TGlzdFxcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0RhLEFBRzZCLEFBR1MsQUFJVCxBQUdHLFlBVGpCLEFBT0EsMEJBR0EsWUFQYyxZQUNkIiwiZmlsZSI6IkY6XFxteXdvcmtcXG5leHQtcHJvamVjdHNcXHNob3BpbmdcXGZyb250ZW5kXFxjb21wb25lbnRzXFxSZXN0YXVyYW50TGlzdFxcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3FsIGZyb20gXCJncmFwaHFsLXRhZ1wiO1xyXG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XHJcbmltcG9ydCB7IGdyYXBocWwgfSBmcm9tIFwicmVhY3QtYXBvbGxvXCI7XHJcbmltcG9ydCB7XHJcbiAgQnV0dG9uLFxyXG4gIENhcmQsXHJcbiAgQ2FyZEJvZHksXHJcbiAgQ2FyZENvbHVtbnMsXHJcbiAgQ2FyZEltZyxcclxuICBDYXJkU3VidGl0bGUsXHJcbn0gZnJvbSBcInJlYWN0c3RyYXBcIjtcclxuaW1wb3J0IHsgQ2FyZFRleHQsIENhcmRUaXRsZSwgQ29sLCBSb3cgfSBmcm9tIFwicmVhY3RzdHJhcFwiO1xyXG5cclxuY29uc3QgUmVzdGF1cmFudExpc3QgPSAoeyByZXN0YXVyYW50cywgc2VhcmNoIH0pID0+IHtcclxuICAvL2lmIChlcnJvcikgcmV0dXJuIFwiRXJyb3IgbG9hZGluZyByZXN0YXVyYW50c1wiO1xyXG4gIC8vaWYgcmVzdGF1cmFudHMgYXJlIHJldHVybmVkIGZyb20gdGhlIEdyYXBoUUwgcXVlcnksIHJ1biB0aGUgZmlsdGVyIHF1ZXJ5XHJcbiAgLy9hbmQgc2V0IGVxdWFsIHRvIHZhcmlhYmxlIHJlc3RhdXJhbnRTZWFyY2hcclxuXHJcbiAgaWYgKHJlc3RhdXJhbnRzICYmIHJlc3RhdXJhbnRzLmxlbmd0aCkge1xyXG4gICAgLy9zZWFyY2hRdWVyeVxyXG4gICAgY29uc3Qgc2VhcmNoUXVlcnkgPSByZXN0YXVyYW50cy5maWx0ZXIoKHF1ZXJ5KSA9PlxyXG4gICAgICBxdWVyeS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoKVxyXG4gICAgKTtcclxuICAgIGlmIChzZWFyY2hRdWVyeS5sZW5ndGggIT0gMCkge1xyXG4gICAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImgtMTAwXCI+XHJcbiAgICAgICAgICAgIHtzZWFyY2hRdWVyeS5tYXAoKHJlcykgPT4gKFxyXG4gICAgICAgICAgICAgIDxDYXJkXHJcbiAgICAgICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogXCIzMCVcIiwgbWFyZ2luOiBcIjAgMTBweFwiIH19XHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJoLTEwMFwiXHJcbiAgICAgICAgICAgICAgICBrZXk9e3Jlcy5faWR9XHJcbiAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgPENhcmRJbWdcclxuICAgICAgICAgICAgICAgICAgdG9wPXt0cnVlfVxyXG4gICAgICAgICAgICAgICAgICBzdHlsZT17eyBoZWlnaHQ6IDI1MCB9fVxyXG4gICAgICAgICAgICAgICAgICBzcmM9e2BodHRwOi8vbG9jYWxob3N0OjEzMzcke3Jlcy5pbWFnZVswXS51cmx9YH1cclxuICAgICAgICAgICAgICAgICAgYWx0PXtgJHtyZXMubmFtZX1gfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIDxDYXJkQm9keT5cclxuICAgICAgICAgICAgICAgICAgPENhcmRUaXRsZT57cmVzLm5hbWV9PC9DYXJkVGl0bGU+XHJcbiAgICAgICAgICAgICAgICAgIDxDYXJkVGV4dD57cmVzLmRlc2NyaXB0aW9ufTwvQ2FyZFRleHQ+XHJcbiAgICAgICAgICAgICAgICA8L0NhcmRCb2R5PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWZvb3RlclwiPlxyXG4gICAgICAgICAgICAgICAgICA8TGlua1xyXG4gICAgICAgICAgICAgICAgICAgIGFzPXtgL3Jlc3RhdXJhbnRzLyR7cmVzLl9pZH1gfVxyXG4gICAgICAgICAgICAgICAgICAgIGhyZWY9e2AvcmVzdGF1cmFudHM/aWQ9JHtyZXMuX2lkfWB9XHJcbiAgICAgICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnlcIj5WaWV3PC9hPlxyXG4gICAgICAgICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L0NhcmQ+XHJcbiAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+XHJcbiAgICAgICAgICAgIHtgXHJcbiAgICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGE6bGluayB7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGE6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAuY2FyZC1jb2x1bW5zIHtcclxuICAgICAgICAgICAgICAgIGNvbHVtbi1jb3VudDogMztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA8L3N0eWxlPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIDxoMT5ObyBSZXN0YXVyYW50cyBGb3VuZDwvaDE+O1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gPGgxPkxvYWRpbmc8L2gxPjtcclxufTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQcm9wcygpIHtcclxuICAvLyBDYWxsIGFuIGV4dGVybmFsIEFQSSBlbmRwb2ludCB0byBnZXQgcG9zdHNcclxuICBjb25zb2xlLmxvZyhcImhlcmVcIik7XHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXCJodHRwOi8vbG9jYWxob3N0OjEzMzcvcmVzdGF1cmFudHNcIik7XHJcbiAgY29uc3QgcmVzdGF1cmFudHMgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gIGNvbnNvbGUubG9nKHJlc3RhdXJhbnRzKTtcclxuICAvLyBCeSByZXR1cm5pbmcgeyBwcm9wczogcG9zdHMgfSwgdGhlIEJsb2cgY29tcG9uZW50XHJcbiAgLy8gd2lsbCByZWNlaXZlIGBwb3N0c2AgYXMgYSBwcm9wIGF0IGJ1aWxkIHRpbWVcclxuICByZXR1cm4ge1xyXG4gICAgcHJvcHM6IHtcclxuICAgICAgcmVzdGF1cmFudHMsXHJcbiAgICB9LFxyXG4gIH07XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgUmVzdGF1cmFudExpc3Q7XHJcbi8qXHJcbmNvbnN0IHF1ZXJ5ID0gZ3FsYFxyXG4gIHtcclxuICAgIHJlc3RhdXJhbnRzIHtcclxuICAgICAgX2lkXHJcbiAgICAgIG5hbWVcclxuICAgICAgZGVzY3JpcHRpb25cclxuICAgICAgaW1hZ2Uge1xyXG4gICAgICAgIHVybFxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5SZXN0YXVyYW50TGlzdC5nZXRTdGF0aWNQcm9wcyA9IGFzeW5jICh7IHJlcSB9KSA9PiB7fTtcclxuLy8gVGhlIGBncmFwaHFsYCB3cmFwcGVyIGV4ZWN1dGVzIGEgR3JhcGhRTCBxdWVyeSBhbmQgbWFrZXMgdGhlIHJlc3VsdHNcclxuLy8gYXZhaWxhYmxlIG9uIHRoZSBgZGF0YWAgcHJvcCBvZiB0aGUgd3JhcHBlZCBjb21wb25lbnQgKFJlc3RhdXJhbnRMaXN0KVxyXG5leHBvcnQgZGVmYXVsdCBncmFwaHFsKHF1ZXJ5LCB7XHJcbiAgcHJvcHM6ICh7IGRhdGEgfSkgPT4gKHtcclxuICAgIGRhdGEsXHJcbiAgfSksXHJcbn0pKFJlc3RhdXJhbnRMaXN0KTtcclxuKi9cclxuIl19 */\\n/*@ sourceURL=F:\\\\\\\\mywork\\\\\\\\next-projects\\\\\\\\shoping\\\\\\\\frontend\\\\\\\\components\\\\\\\\RestaurantList\\\\\\\\index.js */\"));\n    } else {\n      return __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 14\n        }\n      }, \"No Restaurants Found\");\n    }\n  }\n\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }\n  }, \"Loading\");\n};\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts\n  console.log(\"here\");\n  const res = await fetch(\"http://localhost:1337/restaurants\");\n  const restaurants = await res.json();\n  console.log(restaurants); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      restaurants\n    }\n  };\n}\nexport default RestaurantList;\n/*\r\nconst query = gql`\r\n  {\r\n    restaurants {\r\n      _id\r\n      name\r\n      description\r\n      image {\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\nRestaurantList.getStaticProps = async ({ req }) => {};\r\n// The `graphql` wrapper executes a GraphQL query and makes the results\r\n// available on the `data` prop of the wrapped component (RestaurantList)\r\nexport default graphql(query, {\r\n  props: ({ data }) => ({\r\n    data,\r\n  }),\r\n})(RestaurantList);\r\n*/","map":{"version":3,"sources":["F:/mywork/next-projects/shoping/frontend/components/RestaurantList/index.js"],"names":["gql","Link","graphql","Button","Card","CardBody","CardColumns","CardImg","CardSubtitle","CardText","CardTitle","Col","Row","RestaurantList","restaurants","search","length","searchQuery","filter","query","name","toLowerCase","includes","map","res","width","margin","_id","height","image","url","description","getStaticProps","console","log","fetch","json","props"],"mappings":"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","sourcesContent":["import gql from \"graphql-tag\";\r\nimport Link from \"next/link\";\r\nimport { graphql } from \"react-apollo\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardColumns,\r\n  CardImg,\r\n  CardSubtitle,\r\n} from \"reactstrap\";\r\nimport { CardText, CardTitle, Col, Row } from \"reactstrap\";\r\n\r\nconst RestaurantList = ({ restaurants, search }) => {\r\n  //if (error) return \"Error loading restaurants\";\r\n  //if restaurants are returned from the GraphQL query, run the filter query\r\n  //and set equal to variable restaurantSearch\r\n\r\n  if (restaurants && restaurants.length) {\r\n    //searchQuery\r\n    const searchQuery = restaurants.filter((query) =>\r\n      query.name.toLowerCase().includes(search)\r\n    );\r\n    if (searchQuery.length != 0) {\r\n      return (\r\n        <div>\r\n          <div className=\"h-100\">\r\n            {searchQuery.map((res) => (\r\n              <Card\r\n                style={{ width: \"30%\", margin: \"0 10px\" }}\r\n                className=\"h-100\"\r\n                key={res._id}\r\n              >\r\n                <CardImg\r\n                  top={true}\r\n                  style={{ height: 250 }}\r\n                  src={`http://localhost:1337${res.image[0].url}`}\r\n                  alt={`${res.name}`}\r\n                />\r\n                <CardBody>\r\n                  <CardTitle>{res.name}</CardTitle>\r\n                  <CardText>{res.description}</CardText>\r\n                </CardBody>\r\n                <div className=\"card-footer\">\r\n                  <Link\r\n                    as={`/restaurants/${res._id}`}\r\n                    href={`/restaurants?id=${res._id}`}\r\n                  >\r\n                    <a className=\"btn btn-primary\">View</a>\r\n                  </Link>\r\n                </div>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          <style jsx global>\r\n            {`\r\n              a {\r\n                color: white;\r\n              }\r\n              a:link {\r\n                text-decoration: none;\r\n                color: white;\r\n              }\r\n              a:hover {\r\n                color: white;\r\n              }\r\n              .card-columns {\r\n                column-count: 3;\r\n              }\r\n            `}\r\n          </style>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <h1>No Restaurants Found</h1>;\r\n    }\r\n  }\r\n  return <h1>Loading</h1>;\r\n};\r\n\r\nexport async function getStaticProps() {\r\n  // Call an external API endpoint to get posts\r\n  console.log(\"here\");\r\n  const res = await fetch(\"http://localhost:1337/restaurants\");\r\n  const restaurants = await res.json();\r\n  console.log(restaurants);\r\n  // By returning { props: posts }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: {\r\n      restaurants,\r\n    },\r\n  };\r\n}\r\nexport default RestaurantList;\r\n/*\r\nconst query = gql`\r\n  {\r\n    restaurants {\r\n      _id\r\n      name\r\n      description\r\n      image {\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\nRestaurantList.getStaticProps = async ({ req }) => {};\r\n// The `graphql` wrapper executes a GraphQL query and makes the results\r\n// available on the `data` prop of the wrapped component (RestaurantList)\r\nexport default graphql(query, {\r\n  props: ({ data }) => ({\r\n    data,\r\n  }),\r\n})(RestaurantList);\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}