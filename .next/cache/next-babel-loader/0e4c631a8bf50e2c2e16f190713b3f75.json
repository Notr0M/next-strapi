{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"F:\\\\mywork\\\\next-projects\\\\shoping\\\\frontend\\\\components\\\\RestaurantList\\\\index.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//import gql from \"graphql-tag\";\nimport Link from \"next/link\"; //import { graphql } from \"react-apollo\";\n\nimport { Button, Card, CardBody, CardColumns, CardImg, CardSubtitle } from \"reactstrap\";\nimport { CardText, CardTitle, Col, Row } from \"reactstrap\";\n\nvar RestaurantList = function RestaurantList(_ref) {\n  var restaurants = _ref.restaurants,\n      search = _ref.search;\n  //if (error) return \"Error loading restaurants\";\n  //if restaurants are returned from the GraphQL query, run the filter query\n  //and set equal to variable restaurantSearch\n  console.log(restaurants);\n\n  if (restaurants && restaurants.length) {\n    //searchQuery\n    var searchQuery = restaurants.filter(function (query) {\n      return query.name.toLowerCase().includes(search);\n    });\n\n    if (searchQuery.length != 0) {\n      return __jsx(\"div\", {\n        className: \"jsx-1272619790\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-1272619790\" + \" \" + \"h-100\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, searchQuery.map(function (res) {\n        return __jsx(Card, {\n          style: {\n            width: \"30%\",\n            margin: \"0 10px\"\n          },\n          className: \"h-100\",\n          key: res._id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }\n        }, __jsx(CardImg, {\n          top: true,\n          style: {\n            height: 250\n          },\n          src: \"http://localhost:3030\".concat(res.image),\n          alt: \"\".concat(res.name),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }\n        }), __jsx(CardBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }\n        }, __jsx(CardTitle, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }\n        }, res.name), __jsx(CardText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }\n        }, res.description)), __jsx(\"div\", {\n          className: \"jsx-1272619790\" + \" \" + \"card-footer\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }\n        }, __jsx(Link, {\n          as: \"/restaurants/\".concat(res._id),\n          href: \"/restaurants?id=\".concat(res._id),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }\n        }, __jsx(\"a\", {\n          className: \"jsx-1272619790\" + \" \" + \"btn btn-primary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }\n        }, \"View\"))));\n      })), __jsx(_JSXStyle, {\n        id: \"1272619790\",\n        __self: _this\n      }, \"a{color:white;}a:link{-webkit-text-decoration:none;text-decoration:none;color:white;}a:hover{color:white;}.card-columns{-webkit-column-count:3;column-count:3;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkY6XFxteXdvcmtcXG5leHQtcHJvamVjdHNcXHNob3BpbmdcXGZyb250ZW5kXFxjb21wb25lbnRzXFxSZXN0YXVyYW50TGlzdFxcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeURhLEFBRzZCLEFBR1MsQUFJVCxBQUdHLFlBVGpCLEFBT0EsMEJBR0EsWUFQYyxZQUNkIiwiZmlsZSI6IkY6XFxteXdvcmtcXG5leHQtcHJvamVjdHNcXHNob3BpbmdcXGZyb250ZW5kXFxjb21wb25lbnRzXFxSZXN0YXVyYW50TGlzdFxcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL2ltcG9ydCBncWwgZnJvbSBcImdyYXBocWwtdGFnXCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcclxuLy9pbXBvcnQgeyBncmFwaHFsIH0gZnJvbSBcInJlYWN0LWFwb2xsb1wiO1xyXG5cclxuaW1wb3J0IHtcclxuICBCdXR0b24sXHJcbiAgQ2FyZCxcclxuICBDYXJkQm9keSxcclxuICBDYXJkQ29sdW1ucyxcclxuICBDYXJkSW1nLFxyXG4gIENhcmRTdWJ0aXRsZSxcclxufSBmcm9tIFwicmVhY3RzdHJhcFwiO1xyXG5pbXBvcnQgeyBDYXJkVGV4dCwgQ2FyZFRpdGxlLCBDb2wsIFJvdyB9IGZyb20gXCJyZWFjdHN0cmFwXCI7XHJcblxyXG5jb25zdCBSZXN0YXVyYW50TGlzdCA9ICh7IHJlc3RhdXJhbnRzLCBzZWFyY2ggfSkgPT4ge1xyXG4gIC8vaWYgKGVycm9yKSByZXR1cm4gXCJFcnJvciBsb2FkaW5nIHJlc3RhdXJhbnRzXCI7XHJcbiAgLy9pZiByZXN0YXVyYW50cyBhcmUgcmV0dXJuZWQgZnJvbSB0aGUgR3JhcGhRTCBxdWVyeSwgcnVuIHRoZSBmaWx0ZXIgcXVlcnlcclxuICAvL2FuZCBzZXQgZXF1YWwgdG8gdmFyaWFibGUgcmVzdGF1cmFudFNlYXJjaFxyXG4gIGNvbnNvbGUubG9nKHJlc3RhdXJhbnRzKTtcclxuICBpZiAocmVzdGF1cmFudHMgJiYgcmVzdGF1cmFudHMubGVuZ3RoKSB7XHJcbiAgICAvL3NlYXJjaFF1ZXJ5XHJcbiAgICBjb25zdCBzZWFyY2hRdWVyeSA9IHJlc3RhdXJhbnRzLmZpbHRlcigocXVlcnkpID0+XHJcbiAgICAgIHF1ZXJ5Lm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2gpXHJcbiAgICApO1xyXG4gICAgaWYgKHNlYXJjaFF1ZXJ5Lmxlbmd0aCAhPSAwKSB7XHJcbiAgICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaC0xMDBcIj5cclxuICAgICAgICAgICAge3NlYXJjaFF1ZXJ5Lm1hcCgocmVzKSA9PiAoXHJcbiAgICAgICAgICAgICAgPENhcmRcclxuICAgICAgICAgICAgICAgIHN0eWxlPXt7IHdpZHRoOiBcIjMwJVwiLCBtYXJnaW46IFwiMCAxMHB4XCIgfX1cclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImgtMTAwXCJcclxuICAgICAgICAgICAgICAgIGtleT17cmVzLl9pZH1cclxuICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICA8Q2FyZEltZ1xyXG4gICAgICAgICAgICAgICAgICB0b3A9e3RydWV9XHJcbiAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGhlaWdodDogMjUwIH19XHJcbiAgICAgICAgICAgICAgICAgIHNyYz17YGh0dHA6Ly9sb2NhbGhvc3Q6MzAzMCR7cmVzLmltYWdlfWB9XHJcbiAgICAgICAgICAgICAgICAgIGFsdD17YCR7cmVzLm5hbWV9YH1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICA8Q2FyZEJvZHk+XHJcbiAgICAgICAgICAgICAgICAgIDxDYXJkVGl0bGU+e3Jlcy5uYW1lfTwvQ2FyZFRpdGxlPlxyXG4gICAgICAgICAgICAgICAgICA8Q2FyZFRleHQ+e3Jlcy5kZXNjcmlwdGlvbn08L0NhcmRUZXh0PlxyXG4gICAgICAgICAgICAgICAgPC9DYXJkQm9keT5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1mb290ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgPExpbmtcclxuICAgICAgICAgICAgICAgICAgICBhcz17YC9yZXN0YXVyYW50cy8ke3Jlcy5faWR9YH1cclxuICAgICAgICAgICAgICAgICAgICBocmVmPXtgL3Jlc3RhdXJhbnRzP2lkPSR7cmVzLl9pZH1gfVxyXG4gICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5XCI+VmlldzwvYT5cclxuICAgICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9DYXJkPlxyXG4gICAgICAgICAgICApKX1cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPlxyXG4gICAgICAgICAgICB7YFxyXG4gICAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBhOmxpbmsge1xyXG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBhOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLmNhcmQtY29sdW1ucyB7XHJcbiAgICAgICAgICAgICAgICBjb2x1bW4tY291bnQ6IDM7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBgfVxyXG4gICAgICAgICAgPC9zdHlsZT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiA8aDE+Tm8gUmVzdGF1cmFudHMgRm91bmQ8L2gxPjtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIDxoMT5Mb2FkaW5nPC9oMT47XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSZXN0YXVyYW50TGlzdDtcclxuLypcclxuY29uc3QgcXVlcnkgPSBncWxgXHJcbiAge1xyXG4gICAgcmVzdGF1cmFudHMge1xyXG4gICAgICBfaWRcclxuICAgICAgbmFtZVxyXG4gICAgICBkZXNjcmlwdGlvblxyXG4gICAgICBpbWFnZSB7XHJcbiAgICAgICAgdXJsXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbmA7XHJcblJlc3RhdXJhbnRMaXN0LmdldFN0YXRpY1Byb3BzID0gYXN5bmMgKHsgcmVxIH0pID0+IHt9O1xyXG4vLyBUaGUgYGdyYXBocWxgIHdyYXBwZXIgZXhlY3V0ZXMgYSBHcmFwaFFMIHF1ZXJ5IGFuZCBtYWtlcyB0aGUgcmVzdWx0c1xyXG4vLyBhdmFpbGFibGUgb24gdGhlIGBkYXRhYCBwcm9wIG9mIHRoZSB3cmFwcGVkIGNvbXBvbmVudCAoUmVzdGF1cmFudExpc3QpXHJcbmV4cG9ydCBkZWZhdWx0IGdyYXBocWwocXVlcnksIHtcclxuICBwcm9wczogKHsgZGF0YSB9KSA9PiAoe1xyXG4gICAgZGF0YSxcclxuICB9KSxcclxufSkoUmVzdGF1cmFudExpc3QpO1xyXG4qL1xyXG4iXX0= */\\n/*@ sourceURL=F:\\\\\\\\mywork\\\\\\\\next-projects\\\\\\\\shoping\\\\\\\\frontend\\\\\\\\components\\\\\\\\RestaurantList\\\\\\\\index.js */\"));\n    } else {\n      return __jsx(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 14\n        }\n      }, \"No Restaurants Found\");\n    }\n  }\n\n  return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }\n  }, \"Loading\");\n};\n\nexport default RestaurantList;\n/*\r\nconst query = gql`\r\n  {\r\n    restaurants {\r\n      _id\r\n      name\r\n      description\r\n      image {\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\nRestaurantList.getStaticProps = async ({ req }) => {};\r\n// The `graphql` wrapper executes a GraphQL query and makes the results\r\n// available on the `data` prop of the wrapped component (RestaurantList)\r\nexport default graphql(query, {\r\n  props: ({ data }) => ({\r\n    data,\r\n  }),\r\n})(RestaurantList);\r\n*/","map":{"version":3,"sources":["F:/mywork/next-projects/shoping/frontend/components/RestaurantList/index.js"],"names":["Link","Button","Card","CardBody","CardColumns","CardImg","CardSubtitle","CardText","CardTitle","Col","Row","RestaurantList","restaurants","search","console","log","length","searchQuery","filter","query","name","toLowerCase","includes","map","res","width","margin","_id","height","image","description"],"mappings":";;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB,C,CACA;;AAEA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,OALF,EAMEC,YANF,QAOO,YAPP;AAQA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,GAA9B,EAAmCC,GAAnC,QAA8C,YAA9C;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA6B;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAClD;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;;AACA,MAAIA,WAAW,IAAIA,WAAW,CAACI,MAA/B,EAAuC;AACrC;AACA,QAAMC,WAAW,GAAGL,WAAW,CAACM,MAAZ,CAAmB,UAACC,KAAD;AAAA,aACrCA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCT,MAAlC,CADqC;AAAA,KAAnB,CAApB;;AAGA,QAAII,WAAW,CAACD,MAAZ,IAAsB,CAA1B,EAA6B;AAC3B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA,4CAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,WAAW,CAACM,GAAZ,CAAgB,UAACC,GAAD;AAAA,eACf,MAAC,IAAD;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,KAAT;AAAgBC,YAAAA,MAAM,EAAE;AAAxB,WADT;AAEE,UAAA,SAAS,EAAC,OAFZ;AAGE,UAAA,GAAG,EAAEF,GAAG,CAACG,GAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,MAAC,OAAD;AACE,UAAA,GAAG,EAAE,IADP;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAFT;AAGE,UAAA,GAAG,iCAA0BJ,GAAG,CAACK,KAA9B,CAHL;AAIE,UAAA,GAAG,YAAKL,GAAG,CAACJ,IAAT,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAWE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYI,GAAG,CAACJ,IAAhB,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAWI,GAAG,CAACM,WAAf,CAFF,CAXF,EAeE;AAAA,8CAAe,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,IAAD;AACE,UAAA,EAAE,yBAAkBN,GAAG,CAACG,GAAtB,CADJ;AAEE,UAAA,IAAI,4BAAqBH,GAAG,CAACG,GAAzB,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE;AAAA,8CAAa,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF,CAfF,CADe;AAAA,OAAhB,CADH,CADF;AAAA;AAAA;AAAA,4tJADF;AAkDD,KAnDD,MAmDO;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD;AACF;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,CAlED;;AAoEA,eAAehB,cAAf;AACA","sourcesContent":["//import gql from \"graphql-tag\";\r\nimport Link from \"next/link\";\r\n//import { graphql } from \"react-apollo\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardColumns,\r\n  CardImg,\r\n  CardSubtitle,\r\n} from \"reactstrap\";\r\nimport { CardText, CardTitle, Col, Row } from \"reactstrap\";\r\n\r\nconst RestaurantList = ({ restaurants, search }) => {\r\n  //if (error) return \"Error loading restaurants\";\r\n  //if restaurants are returned from the GraphQL query, run the filter query\r\n  //and set equal to variable restaurantSearch\r\n  console.log(restaurants);\r\n  if (restaurants && restaurants.length) {\r\n    //searchQuery\r\n    const searchQuery = restaurants.filter((query) =>\r\n      query.name.toLowerCase().includes(search)\r\n    );\r\n    if (searchQuery.length != 0) {\r\n      return (\r\n        <div>\r\n          <div className=\"h-100\">\r\n            {searchQuery.map((res) => (\r\n              <Card\r\n                style={{ width: \"30%\", margin: \"0 10px\" }}\r\n                className=\"h-100\"\r\n                key={res._id}\r\n              >\r\n                <CardImg\r\n                  top={true}\r\n                  style={{ height: 250 }}\r\n                  src={`http://localhost:3030${res.image}`}\r\n                  alt={`${res.name}`}\r\n                />\r\n                <CardBody>\r\n                  <CardTitle>{res.name}</CardTitle>\r\n                  <CardText>{res.description}</CardText>\r\n                </CardBody>\r\n                <div className=\"card-footer\">\r\n                  <Link\r\n                    as={`/restaurants/${res._id}`}\r\n                    href={`/restaurants?id=${res._id}`}\r\n                  >\r\n                    <a className=\"btn btn-primary\">View</a>\r\n                  </Link>\r\n                </div>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          <style jsx global>\r\n            {`\r\n              a {\r\n                color: white;\r\n              }\r\n              a:link {\r\n                text-decoration: none;\r\n                color: white;\r\n              }\r\n              a:hover {\r\n                color: white;\r\n              }\r\n              .card-columns {\r\n                column-count: 3;\r\n              }\r\n            `}\r\n          </style>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <h1>No Restaurants Found</h1>;\r\n    }\r\n  }\r\n  return <h1>Loading</h1>;\r\n};\r\n\r\nexport default RestaurantList;\r\n/*\r\nconst query = gql`\r\n  {\r\n    restaurants {\r\n      _id\r\n      name\r\n      description\r\n      image {\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\nRestaurantList.getStaticProps = async ({ req }) => {};\r\n// The `graphql` wrapper executes a GraphQL query and makes the results\r\n// available on the `data` prop of the wrapped component (RestaurantList)\r\nexport default graphql(query, {\r\n  props: ({ data }) => ({\r\n    data,\r\n  }),\r\n})(RestaurantList);\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}