{"ast":null,"code":"import withApollo from \"next-with-apollo\"; // import ApolloClient, { InMemoryCache } from \"apollo-boost\";\n\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nvar cache = new InMemoryCache();\nvar link = new HttpLink({\n  uri: \"http://localhost:1337/graphql\"\n});\n/* const client = new ApolloClient({\r\n  // Provide required constructor fields\r\n  cache: cache,\r\n  link: link,\r\n\r\n  // Provide some optional constructor fields\r\n  name: \"shoping-frondend\",\r\n  version: \"0.1.0\",\r\n  queryDeduplication: false,\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      fetchPolicy: \"cache-and-network\",\r\n    },\r\n  },\r\n}); */\n\nexport default withApollo( // You can get headers and ctx (context) from the callback params\n// e.g. ({ headers, ctx, initialState })\nfunction (_ref) {\n  var initialState = _ref.initialState;\n  console.log(initialState);\n  return new ApolloClient({\n    link: link,\n    cache: cache //  rehydrate the cache using the initial data passed from the server:\n    .restore(initialState || {})\n  });\n});","map":null,"metadata":{},"sourceType":"module"}