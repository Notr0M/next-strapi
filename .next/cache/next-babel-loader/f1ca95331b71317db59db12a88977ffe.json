{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//import gql from \"graphql-tag\";\nimport Link from \"next/link\"; //import { graphql } from \"react-apollo\";\n\nimport { Button, Card, CardBody, CardColumns, CardImg, CardSubtitle } from \"reactstrap\";\nimport { CardText, CardTitle, Col, Row } from \"reactstrap\";\n\nvar RestaurantList = function RestaurantList(_ref) {\n  var restaurants = _ref.restaurants,\n      search = _ref.search;\n\n  //if (error) return \"Error loading restaurants\";\n  //if restaurants are returned from the GraphQL query, run the filter query\n  //and set equal to variable restaurantSearch\n  if (restaurants && restaurants.length) {\n    //searchQuery\n    var searchQuery = restaurants.filter(function (query) {\n      return query.name.toLowerCase().includes(search);\n    });\n\n    if (searchQuery.length != 0) {\n      return __jsx(\"div\", {\n        className: \"jsx-1272619790\"\n      }, __jsx(\"div\", {\n        className: \"jsx-1272619790\" + \" \" + \"h-100\"\n      }, searchQuery.map(function (res) {\n        return __jsx(Card, {\n          style: {\n            width: \"30%\",\n            margin: \"0 10px\"\n          },\n          className: \"h-100\",\n          key: res._id\n        }, __jsx(CardImg, {\n          top: true,\n          style: {\n            height: 250\n          },\n          src: \"http://localhost:1337\".concat(res.image[0].url),\n          alt: \"\".concat(res.name)\n        }), __jsx(CardBody, null, __jsx(CardTitle, null, res.name), __jsx(CardText, null, res.description)), __jsx(\"div\", {\n          className: \"jsx-1272619790\" + \" \" + \"card-footer\"\n        }, __jsx(Link, {\n          as: \"/restaurants/\".concat(res._id),\n          href: \"/restaurants?id=\".concat(res._id)\n        }, __jsx(\"a\", {\n          className: \"jsx-1272619790\" + \" \" + \"btn btn-primary\"\n        }, \"View\"))));\n      })), __jsx(_JSXStyle, {\n        id: \"1272619790\"\n      }, [\"a{color:white;}\", \"a:link{-webkit-text-decoration:none;text-decoration:none;color:white;}\", \"a:hover{color:white;}\", \".card-columns{-webkit-column-count:3;column-count:3;}\"]));\n    } else {\n      return __jsx(\"h1\", null, \"No Restaurants Found\");\n    }\n  }\n\n  return __jsx(\"h1\", null, \"Loading\");\n};\n\nexport default RestaurantList;\n/*\r\nconst query = gql`\r\n  {\r\n    restaurants {\r\n      _id\r\n      name\r\n      description\r\n      image {\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\nRestaurantList.getStaticProps = async ({ req }) => {};\r\n// The `graphql` wrapper executes a GraphQL query and makes the results\r\n// available on the `data` prop of the wrapped component (RestaurantList)\r\nexport default graphql(query, {\r\n  props: ({ data }) => ({\r\n    data,\r\n  }),\r\n})(RestaurantList);\r\n*/","map":null,"metadata":{},"sourceType":"module"}