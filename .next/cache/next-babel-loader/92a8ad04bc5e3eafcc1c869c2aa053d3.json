{"ast":null,"code":"var _jsxFileName = \"F:\\\\mywork\\\\next-projects\\\\shoping\\\\frontend\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Layout from \"../components/Layout\";\nimport withData from \"../lib/apollo\";\nimport React from \"react\";\nimport App from \"next/app\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      apollo\n    } = this.props;\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, __jsx(Layout, _extends({\n      isAuthenticated: isAuthenticated\n    }, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }), __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }))), __jsx(ApolloProvider, {\n      client: apollo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n} // Wraps all components in the tree with the data provider\n\n\nexport default withData(MyApp);","map":{"version":3,"sources":["F:/mywork/next-projects/shoping/frontend/pages/_app.js"],"names":["Layout","withData","React","App","ApolloProvider","MyApp","getInitialProps","Component","router","ctx","pageProps","render","apollo","props","isAuthenticated"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,cAAT,QAA+B,qBAA/B;;AAEA,MAAMC,KAAN,SAAoBF,GAApB,CAAwB;AACtB,eAAaG,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,GAA7B,EAAyD;AACvD,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIH,SAAS,CAACD,eAAd,EAA+B;AAC7BI,MAAAA,SAAS,GAAG,MAAMH,SAAS,CAACD,eAAV,CAA0BG,GAA1B,CAAlB;AACD;;AACD,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,SAAF;AAAaG,MAAAA,SAAb;AAAwBE,MAAAA;AAAxB,QAAmC,KAAKC,KAA9C;AAEA,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,eAAe,EAAEC;AAAzB,OAA8CJ,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,EAIE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAJF,CADF;AAUD;;AArBqB,C,CAwBxB;;;AACA,eAAeT,QAAQ,CAACI,KAAD,CAAvB","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport withData from \"../lib/apollo\";\r\n\r\nimport React from \"react\";\r\nimport App from \"next/app\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\nclass MyApp extends App {\r\n  static async getInitialProps({ Component, router, ctx }) {\r\n    let pageProps = {};\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n    return { pageProps };\r\n  }\r\n  render() {\r\n    const { Component, pageProps, apollo } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <Layout isAuthenticated={isAuthenticated} {...pageProps}>\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n        <ApolloProvider client={apollo}>\r\n          <Component {...pageProps} />\r\n        </ApolloProvider>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// Wraps all components in the tree with the data provider\r\nexport default withData(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}